// Generated by CoffeeScript 1.10.0
$(document).ready(function() {
  var Viewer, viewer;
  Viewer = function() {
    var self;
    self = this;
    this.posts = ko.observableArray();
    this.id = null;
    this.custom = null;
    this.random = 0;
    this.ajaxLock = 0;
    this.page = 0;
    this.size = 500;
    this.speed = 3600;
    this.stock = 100;
    this.init = function() {
      var i, key, len, param, params, position, query, value;
      query = window.location.search.substring(1);
      params = query.split("&");
      query = [];
      for (i = 0, len = params.length; i < len; i++) {
        param = params[i];
        position = param.indexOf("=");
        if (position > 0) {
          key = param.substring(0, position);
          value = param.substring(position + 1);
          query[key] = value;
        }
      }
      if (query.id === "") {
        query.id = "staff";
      }
      if (query.custom === "") {
        query.custom = "www.davidslog.com";
      }
      if (query.id != null) {
        this.id = query.id;
      } else if (query.custom != null) {
        this.custom = query.custom;
      } else {
        query.id = "staff";
      }
      if (query.random != null) {
        this.random = 1;
      }
      if (query.size != null) {
        query.size = parseInt(query.size);
        if (query.size === 1280) {
          this.size = query.size;
        } else {
          this.stock = 40;
        }
      }
      if (query.speed != null) {
        query.speed = parseInt(query.speed);
        if (query.speed >= 1000) {
          this.speed = query.speed;
        }
      }
      return this.loadPosts(self.startSlideshow);
    };
    this.loadPosts = function(callback) {
      var idOrCustom, params;
      params = {
        size: self.size
      };
      if (this.id != null) {
        idOrCustom = this.id;
      } else if (this.custom != null) {
        idOrCustom = this.custom;
      }
      if (!self.random) {
        params.offset = self.page;
      }
      return $.getJSON("//rpt.jgs.me/ps/" + idOrCustom, params, function(json) {
        var i, len, url;
        for (i = 0, len = json.length; i < len; i++) {
          url = json[i];
          self.posts.push(url);
        }
        self.page += json.length;
        return callback();
      });
    };
    this.startSlideshow = function() {
      var arg;
      arg = arguments;
      $(".current:first").transition({
        left: "-100%"
      }, 800, "linear", function() {
        return $(".current:first").removeClass("current").addClass("finish");
      });
      $(".wait:first").removeClass("wait").addClass("prev");
      $(".prev:first").transition({
        left: "0%"
      }, 800, "linear", function() {
        return $(".prev:first").removeClass("prev").addClass("current");
      });
      if ($(".wait").length < self.stock && self.ajaxLock === 0) {
        self.ajaxLock = 1;
        self.loadPosts(function() {
          return self.ajaxLock = 0;
        });
      }
      $(".finish").remove();
      return setTimeout(arg.callee, self.speed);
    };
    return this;
  };
  viewer = new Viewer();
  viewer.init();
  return ko.applyBindings(viewer);
});
